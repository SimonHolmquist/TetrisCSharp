name: CI

on:
  push:
  pull_request:

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # (Opcional) Cache NuGet
      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore

      - name: Build (Release, warn as error)
        run: dotnet build -c Release -warnaserror

      - name: Test (Release, with coverage)
        run: dotnet test -c Release --collect:"XPlat Code Coverage" --logger "trx;LogFileName=test_results.trx"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}
          path: |
            **/TestResults/**/*.trx
            **/TestResults/**/coverage.cobertura.xml

  publish-console:
    name: Publish Console Artifacts
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Publish win-x64
        run: dotnet publish src/TetrisCSharp.ConsoleUI -c Release -r win-x64 --self-contained false -o out/win-x64
      - name: Publish linux-x64
        run: dotnet publish src/TetrisCSharp.ConsoleUI -c Release -r linux-x64 --self-contained false -o out/linux-x64

      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: tetris-console-win-x64
          path: out/win-x64

      - name: Upload artifact (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: tetris-console-linux-x64
          path: out/linux-x64

  # (Opcional) job separado para verificar formato
  format:
    name: dotnet format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - run: dotnet tool restore
      - run: dotnet format --verify-no-changes
